@1 17 Модулі

@2 Модулі
@@ модул+

@3 Модулем вважається файл із кодом.
У цьому файлі ключовим словом export позначені змінні та функції, 
призначені клієнту модуля.

@3 Клієнт обирає з експортованих модулем імен ті, що йому потрібні.
Він робить це за допомогою команди import.

@2 Слово export


@3 Ключове слово export можна ставити:
- перед оголошенням змінних, функцій та класів.
{{
export let one = 1;
}}
- окремо, причому у фігурних дужках вказується, що саме експортується.
{{
let one = 1, two = 2;
export {one, two};
}}

@3 За допомогою слова as можна перейменувати об'єкти, що експортуються.
{{
export {one as once, two as twice};
}}

@2 Слово import
@@ import

@3 Робить доступними значення з модуля.
{{
import {one, two} from "./nums";
}}
В результаті імпорту з'являться локальні змінні one, two, які міститимуть значення відповідних експортів.

@3 Імпортовану змінну можна перейменувати за допомогою слова «as»:
{{
// імпорт one під іменем item1, а two – під іменем item2
import {one as item1, 2 as item2} from "./nums";
}}

@3 Можна імпортувати з модуля всі значення одразу у вигляді одного об'єкта:
{{
import * as obj from "./nums";
}}

@2 export default
@@ export default

@3 Дуже часто модуль експортує єдиний об'єкт - клас чи функцію.

@3 Якщо поставити після export слово default, то значення стане "експортом за замовчуванням".
{{
export default class User {
  constructor(name) {
    this.name = name;
  }
};
}}

@3 Таке значення можна імпортувати без фігурних дужок.
{{
import User from './user';
let user = new User("Василь");
}}

@2 Підтримка модулів у браузерах

@3 Приклад модуля у файлі module1.js .
{{
let one = 1, two = 2;
export {one, two};
}}

@3 Приклад клієнта модуля у файлі index.html у тому ж каталозі.
{{
<script type="module">
    import {one} from "./module1.js";
    alert(one);
</script>
}}


@2 Посилання

@3 Стаття про модулі [[https://habr.com/company/tuturu/blog/326716/]]