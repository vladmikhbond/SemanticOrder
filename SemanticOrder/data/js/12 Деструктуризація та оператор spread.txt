@1 12 Деструктуризація та оператор spread


@2 Деструктуризація масивів
@@ destructuring assignment|деструктуризаці+

@3 Деструктуризація (destructuring assignment) має місце, коли присвоюється об'єкт чи масив.

@3 У правій частині присвоєння - об'єкт, що ітерується, наприклад, масив або рядок.
{{
let [a, b] = [1, 2]; // a = 1, b = 2

[a, b] = "ABC"; // a = 'A', b = 'B'
}}

@3 Непотрібні елементи масиву можна пропустити.
{{
[,,, a, b] = "ABCDE" // a = 'D' b = 'E'
}}

@2 Деструктуризація об'єктів
@@ деструктуризаці+ об'єкт+

@3 У правій частині присвоєння - об'єкт.
{{
let options = {
  title: "Меню",
  width: 100,
  height: 200
};

let {width, height, title} = options;

console.log(width, height, title);
}}

@3 Можна відобразити властивості об'єкта на змінні з іншими іменами.
{{
let options = {
  title: "Меню",
  width: 100,
  height: 200
};

let {width: w, height: h, title} = options;
console.log(w, h, title);
}}


@3 Можна надати змінним значення за замовчанням.
{{
let options = {
  title: "Меню"
};

let {width=100, height=200, title} = options;
}}

@3 Можна не писати в лівій частині присвоювання слово let або const,
але при цьому треба пам'ятати, що фігурні дужки в потоці коду сприймаються інтерпретатором як блок.
{{
{width=100, height=200, title} = options;   // _помилка_
({width=100, height=200, title} = options); // правильно
}}

@2 Деструктуризація у параметрах
@@ деструктуризац+

@3 Якщо функція отримує об'єкт, вона може його відразу розподілити по змінним:
{{
let options = {
   title: "Меню",
   width: 100,
   height: 200
};

function showOpts({title, width, height}) {
   console.log(title + '' + width + '' + height);
}

showOpts(options); // Меню 100200
}}

@3 Те саме стосується масивів.
{{
function showOpts([title, width, height]) {
   console.log(title + '' + width + '' + height);
}

showOpts([1,2,3]);
}}

@3 Інші правила деструктуризації (за замовчуванням, перейменування)
тут також працюють.

@2 Оператор spread
@@ ...|spread

@3 Оператор spread (позначається трьома крапками) дозволяє при деструктуризації
однією змінною підібрати залишок масиву.
{{
let [a, ...b] = [1, 2, 3, 4]
console.log(a, b)
}}
Змінна з трьома крапками повинна бути останньою.
У такому контексті оператору spread найбільше підходить назва rest.

@3 Щось схоже відбувається, коли аргументи надаються параметрам при виклику функції.
