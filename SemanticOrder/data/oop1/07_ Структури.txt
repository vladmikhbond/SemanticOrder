@1 07_ Структури

@3 Структура -  тип даних користувача, который який об'єднує в собі різнотипні дані. 

@3 Структура - значимий тип із змінними значеннями.
Екземпляр структури займає стільки місця в пам'яті, скільки потрібно для зберігання полів структури. 

@3 Приклад оголошення структури. 
{{
struct Point
{
    public int X;
    public int Y;
}  
}}

@2 Конструктори та селектори

@3 У структури обов'язково є конструктор без параметрів, який заповнює всі поля структури нульовими значеннями. Створювати свій конструктор без параметрів заборонено.
{{
Point p = new Point();
Point p;    // той же результат 
}}

@3 Окрім обов'язкового конструктора можна оголосити інші конструктори. 
{{
struct Point
{
    public int X;
    public int Y;

    public Point(int x, int y) {
         X = x;
         Y = y;
    } 
}  
}}

@3 Селекторами служать імена полів:  
{{
Point p;
p.X = 10;  
p.Y = 20;   
}}

@2 Присвоєння структур 

@3 Присвоєння структури - це завжди копіювання її полів.
{{
Point p1 = new Point(2,3);
Point p2 = p1; 
}}
[[structAssigning.png]]

@2 Методи структури

@3 У структур можуть бути не тільки поля, а й методи.
Через прихований параметр {this} в тілі методу доступний екземпляр, на якому викликається метод. 
{{
struct Point
{
    public int X;
    public int Y;

    public double Length() {
         return Math.Sqrt(this.X * this.X + this.Y * this.Y);
    } 
}
}}

@2 Конструктор копіювання

@3 Присвоєння
{{ 
Point p2 = p1; 
}}
виконує поверхневе копіювання структури (shellow copy). 

@3 Якщо необхідно глибоке копіювання (deep copy), його потрібно робити вручну.
Зазвичай його реалізують у формі конструктора копіювання. 

@3 Конструктор копіювання має один параметр - структуру того ж типу.  
{{
struct FullName
{
    public string[] Names;

    public FullName(string[] names)
    {
        this.Names = names;
    }

    public FullName(FullName other) {
        this.Names = new string[other.Names.Length];
        Array.Copy(other.Names, this.Names, other.Names.Length);
    }
}  

string[] names = {"John", "Smith"};
FullName fn1 = new FullName(names);
FullName fn2 = new FullName(fn1);            
}}

@6 Конструктор Копирования для Вектора | 803

@2 Задачи

@6 Поиск Структуры  | 156
@6 Сортировка Структур  | 157
@6 Частичная Сортировка	| 187
@6 Поиск в Упорядоченном Массиве | 158
@6 Слияние Упорядоченных Массивов | 159



