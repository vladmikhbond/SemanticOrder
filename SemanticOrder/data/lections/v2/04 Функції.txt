@1 04 Функції

@2 Функції

@3 З функціями пов'язані три команди: 
визначення  - function f()
виклику - f()
повернення - return

@3 Особливості функцій у JS:
- кількість параметрів не обов'язково співпадає з кількістю аргументів,
- функція має контекст this,
- функція це об'єкт, тому має властивості,
- є 3 способи  визначення функції: декларації, вирази, стрілочні функції,


@3 Пересічні риси
- визначення функції створює область видимості,
- визначення функції створює лексичне замикання,
- значення аргументів передаються параметрам за правилами присвоювання,


@2 Параметри та аргументи

@3 Параметри - імена, які знаходяться у заголовку функції.
Аргументи – вирази, які знаходяться в команді виклику.

@3 Функція може бути викликана будь-якою кількістю аргументів.
Параметри, яким не дісталося аргументів, залишаться невизначеними.

@3 Параметрам можна надати значення за замовчанням.
{{
function foo(x=10) {
    alert(x)
}
foo()
}} Значення набувають чинності, якщо аргумент відсутній або дорівнює undefined.

@3 Значення за замовчанням можуть бути не тільки константами, але й виразами.
Вираз обчислюється не під час оголошення функції, а під час її виклику,
і тільки якщо аргумент не заданий або дорівнює undefined.
{{
function sayHi(who = getCurrentUser().toUpperCase()) {
  alert('Привіт,' + who);
}

function getCurrentUser() {
  return 'Василь';
}

sayHi();   // Привіт Василь
}}

@2 Деструктуризація у параметрах

@3 Якщо функція отримує об'єкт, вона може його відразу розподілити по змінним:
{{
let options = {
   title: "Меню",
   width: 100,
   height: 200
};

function showOpts({title, width, height}) {
   console.log(title + '' + width + '' + height);
}

showOpts(options); // Меню 100200
}}

@3 Те саме стосується масивів.
{{
function showOpts([title, width, height]) {
   console.log(title + '' + width + '' + height);
}

showOpts([1,2,3]);
}}

@3 Інші правила деструктуризації (за замовчуванням, перейменування)
тут також працюють.

@2 Область видимості

@3 Область видимості імені це частина програми, де ім'я щось позначає.

@3 Визначення функції (команда function) створює область видимості.
У цій області параметри є локальними змінними.

@3 Визначення функцій може бути вкладеним.

@3 В ES-6 блок також створює область видимості,
але тільки для імен, оголошених із ключовими словами let та const.

@3 Блокова область видимості поширюється і на функції,
тобто функцію, оголошену в блоці, видно лише в ньому.

