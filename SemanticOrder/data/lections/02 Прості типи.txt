@1 02 Прості типи

@3 Операція визначення типу - typeof.
{{
> typeof 1
'number'
}}

@2 Числа (number)

@3 Як цілі, так і дійсні. 

@3 Додаткові числа: Infinity, -Infinity и NaN.
Завдяки ним арифметичні операції не викидають виключень.

@3 Якщо у виразі з'являється NaN, воно поширюється на весь вираз.
Єдине виключення це NaN ** 0  => 1.

@2 Довгі числа (bigint)

@3 Створення
{{
const bigInt = 1234567890123456789012345678901234567890n;
або
new BigInt(123);
}}

@3 У виразах не можна змішувати звичайні і довгі числа.

@2 Рядки (string)

@3 Рядкові константи оточують лапками:
 - одинарними   'Hello'
 - подвійними   "Hello"
 - зворотними    'Hello ${name}!'

@3 Як і інші прості типи, рядки - незмінні значення.

@2 Логічний тип (boolean)

@3 Логічні константи: true, false.

@3 Джерела значень - логічні константи, операції порівняння, логічні вирази, приведення інших типів.

@2 Тип null  (null)

@3 Має єдине значення - null.
Застосовується, щоб сигналізувати про невизначеність змінної.

@2 Тип undefined  (undefined)

@3 Має єдине значення - undefined.
Застосовується, щоб сигналізувати про те, що змінна не ініціалізована.
{{
let x;   // x = undefined
}}

@2 Неявні перетворення простих типів

@3 Суворо типізована мова програмування не дозволяє неявних перетворень типів,
не суворо типізована - дозволяє.
Чим більше дозволяє, тип менша її суворість.

@3 Цільовий тип перетворення виводиться з контексту, зазвичай це операція або виклик функції.
Наприклад, функція alert вимагає приведення до рядку,
операція * вимагає приведення до числа,
умова команди if вимагає приведення до логічного типу.

@3 При порівнянні значень різних типів JavaScript наводить кожне з них до числа.
{{
> "02" > 1
true
> "10" == true
false 
}}

@3 {Наведення до числа}
{{
undefined    -> NaN
null	     -> 0
true / false ->	1 / 0
string 	     -> пробільні символи з обох боків обрізаються, а потім:
 ""    -> 0
 "123" -> 123
 "abc" -> NaN
}}

@3 {Наведення до логічного типу}
{{
 "Пусті" значення, як от 0, "", null, undefined, NaN -> false.
 Інші значення  -> true.
}}

@3 {Наведення до рядка}
Цільовій рядок є текстовим зображенням початкового значення.

{Зауваження}. Метод масиву sort, порівнюючи елементи, приводить їх до рядків.


@2 Явні перетворення простих типів

@3 Явні перетворення роблять функції Number, Boolean, String.
{{
> Boolean(100)
true
}}

