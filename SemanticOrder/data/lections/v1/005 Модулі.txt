@1 005 Модулі

@2 Модулі ES2015

@3 Модуль - це файл із програмою на JS або TS.
Модуль утворює область видимості та може експортувати деякі імена за її межі.

@3 Слово export позначає імена, які експортує модуль.
{{
export {name1, name2,...}
}}
 
@3 Модуль підключається до іншого модуля за допомогою команди import.
{{
import {name1, name2,...} from './model.js'
...
}}

@3 У реченні from ім'я модуля потрібно писати з розширенням .js
Відносний шлях до модуля слід розпочинати з "./", "../" або "/".
Файли зберігати у кодуванні UTF-8.

@3 Код у модулі виконується лише один раз під час першого імпортування.
Код модуля зазвичай виконує задачі ініціалізації.

@@ @3 Щоб програма могла підключати модулі, вона сама має бути модулем.
@@ Її тег <script> повинен мати атрибут type="module".
@@ {{
@@ <script src="main.js" type="module"></script>
@@ }}

@2 Варіанти export

@3 Словом export можна позначати окремі визначення.
{{
export const name1: Number = 25;
export function name2() {...};
}}

@3 Під час  експорту можливе перейменування.
{{
export {name1 as name2, ... } from ...
}}

@3 Можна експортувати за замовченням лише одне ім'я з модуля.
{{
export default function name2() {...};
    або
export {name2 as default};
}}

@2 Варіанти import

@3 Можливий імпорт одразу всього, що експортує модуль.
Тоді звертатися до імпортованих імен потрібно з префіксом.
{{
import * as say from './say.js';

say.sayHi('John');
}}

@3 Під час імпорту можливе перейменування.
{{
import {name1 as name2, ... } from ...
}}

@3 Імпорт за замовченням може супроводжуватись перейменуванням того, що імпортується.
{{
import anyName from "./src/utils.js";
}}

@2 Модулі CommonJS

@3 Рідний формат модулів Node - CommonJS.
Ось приклад "перекладу" з ES2015 на CommonJS.
{{
import { join } from 'path'
       // перекладається як
var join = require('path').join;
}}
