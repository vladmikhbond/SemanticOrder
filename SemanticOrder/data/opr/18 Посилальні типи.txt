@1 18 Посилальні типи
@@ посилальн+ тип|посиланн+

@3 Масиви відносяться до категорії посилальних типів (reference type).
Посилальні типи потребують двох ділянок пам'яті для свого зберігання.
[[ReferenceType.png]]

@3 Елементи масиву займають безперервну область пам'яті.
Адреса цієї області (посилання) зберігається в окремій змінній.
{{
const x = []
x.push('a')
x.push('b')
x[10] = 'c'
}}
[[https://pythontutor.com/javascript.html#mode=edit]]

@3 Присвоєння {{b = a}} не веде до копіювання елементів масиву.
Ім'я b стає синонімом імені a.
{{
let a = [1,2,3,4,5];
let b = a;
b[0] = 100;
alert(a[0]);
}}

@2 Аргументи посилальних типів 
@2 -

@3 При передачі масиву в функцію параметр стає ще одним ім'ям масиву-аргументу.
{{
let a = [1, 2, 3];
function f(b) {
   b[0] = 100;
}
console.log(a);
}}

@3 Приклад. Визначити функцію, яка отримує два масиви і приєднує до першого масиву другий.
Функція не повинна створювати третій масив, а тільки доповнювати перший.
{{
function append(a1, a2) {
  a1 = a1.concat(a2);
}
}}

@3 Перевірка
{{
let x = [10, 20, 30], y = [40, 50];
append(x, y);
console.log(x);     // в чому помилка?
}}

@3 Правильне рішення
{{
function append (a1, a2) {
  for (let i = 0; i < a2.length; i += 1)
    a1.push(a2[i]);
}
}}

@2 Підсумки

@3 Значення посилальних типів зберігаються в пам'яті розділено: посилання і саме значення.
@3 Коли посилальний аргумент передається в функцію, копіюється посилання, а не значення.


@2 Задачі

@6 Масив в Рядок | 520
@6 Обертання масиву | 521
@6 Видалення і Зсув | 522
@6 Додавання і Зсув | 523

@@ Питання

@@ Як скопіювати масив?
@@ Строки простой тип или ссылочный?
@@ В С++ параметры передаются по ссылке и по значению. A как в javascript?
@@ Замість циклу можна скористатися операцією розширення (spread)
@@ [[https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Spread_syntax]]
@@ {{
@@ a1.push(... a2);
@@ }}
