@1 09 Граматика функцій

@2 Параметри і аргументи
@@ undefined

@3 Параметри - це змінні, об'явлені у заголовку функції.

@3 Аргументи - це вирази у виклику функції.

@3 Перед виконанням тіла функції значення аргументів обчислюються і присвоюються параметрам.
Перший аргумент присвоюється першому параметру, другий - другому і т.д.
{{
function f(a, b, c) {
    console.log(a, b, c);
}

f(1, 2 + 3, 4 + 5 + 6);
}}

@3 {Зауваження} В JS кількість аргументів в команді виклику не повинна збігатися з числом параметрів функції.
Якщо аргументів не вистачає, зайві  параметри залишаються невизначеними (undefined).
Якщо не вистачає параметрів, зайві аргументи ігноруються.

@3 Спробуємо визначити функцію для обміну значень двох змінних.
{{
function swap(a, b) {
   let t = a;
   a = b;
   b = t;
}
}}

@3 Перевіримо, чи вона працює?
{{
let x = 3, y = 5; 
console.log(x, y);
swap(x, y);
console.log(x, y);
}}

@2 Функціональні вирази
@@ функціональн+ вираз+

@3 Функцію можна визначити у вигляді функціонального виразу.
{{
const sum = function (x, y) { 
    return x + y; 
}
}}

@3 Функціональному виразу можна надати ім'я.
{{
const sum = function (x, y) ...
}} або скористатися безіменним виразом, як аргументом якоїсь функції.


@3 Такий спосіб завдання відрізняється від звичайного визначення функції командою function
тим, що повинен передувати виклику функції в програмі.


@2 Область видимості
@@ област+ видимост+|локальн+ змінн+

@3 Визначення функції, так само як і блок, створює область видимості.

@3 Змінні, оголошені в тілі функції, будуть локальними змінними.

@2 Стандартні функції
@@ Math|alert

@3 JS має низку вбудованих математичних функцій.
Їх іменам передує слово Math.

@3 Всі інші вбудовані функції надає середовище виконання - веб-браузер або програма node.js.

@3 Стандартну функцію alert() надають тільки веб-браузери.
Те ж саме відноситься до функцій prompt() і confirm().

@3 Функцію console.log() надають і браузери, і node.js.
Стаття про console [[https://habrahabr.ru/post/114483/]]


@2 Побічний ефект
@@ побічн+ ефект+|чист+ функц+

@3 Основне завдання функції - обчислити і повернути нове значення.
Крім цього, функції можуть змінити своє оточення або скористатися їм в своєму обчисленні.

@3 Зміни в оточенні, зроблені функцією, називають побічним ефектом.
Цінність функції alert не в тому, що вона повертає, а в її побічному ефекті.

@3 Функції, які не змінюють свого оточення і не використовують його, називають чистими функціями.
Чисті функції люблять за те, що їх поведінку легше передбачити і їх простіше відлагоджувати.


@2 Підсумки

@3 Команда function визначає функцію.

@3 Команда return повертає значення і управління.

@3 Команда виклику обчислює аргументи і передає управління в тіло функції.

@3 Функції бувають чисті і з побічним ефектом.

@2 Задачі

@6 Сума Менших Кубів | 500
@6 Найменше Кратне * | 598
