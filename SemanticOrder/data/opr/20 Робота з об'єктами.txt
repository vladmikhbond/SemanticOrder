@1 20 Робота з об'єктами

@2 Цикл for-in
@@ forANYCHARSin|for-in

@3 Для перерахування властивостей об'єкта в JS є спеціальний цикл - for-in.
{{
let rect = {width: 10, height: 12, color: "red"};
for (let prop in rect) {
   console.log (prop, rect[prop]);
}
}}

@2 Глобальний об'єкт
@@ глобальн+ об'єкт+|window|global

@3 Глобальний об'єкт надається середовищем виконання.
Для браузера це window, для node.js це global.

@3 Приклад. Вивести на консоль всі властивості об'єкта window.
{{
for (let prop in window)
   console.log(prop, window [prop]);
}}

@2 Об'єкт - посилальний тип
@-

@3 Об'єкти, як і масиви, відносяться до посилальних типів даних.
{{
let date1 = {year: 2018, month: "May", day: 23};
let date2 = date1;      // date1 і date2 тепер синоніми

date2.day = 31;
console.log (date1);
}}

@3 При передачі об'єкта в функцію все відбувається так само, як з масивом,
тобто на час виконання тіла функції її параметр стає ім'ям аргументу.
{{
function swap(o) {
  let t = o.x; o.x = o.y; o.y = t
}

let obj = {x: 3, y: 5};
swap(obj);
console.log(obj);
}}

@2 Масиви це об'єкти
@@ -

@3 Масив - це об'єкт із властивостями "0", "1", "2", ...  і низкою спеціальних методів.
{{
let colors = ["червоний", "синій", "зелений"];
for (let i in colors)
   console.log(colors [i]);
}}

@3 Масиву можна надати додаткові властивості.
{{
colors.foo = "bar"
}}

@3 До властивостей масиву можна звертатися за допомогою квадратних дужок.
{{
colors.length === colors ["length"]
}}

@3 Для масивів length = max_index + 1

@2 Функції це об'єкти
@@ arguments|call|apply|this

@3 Функція також має властивості, наприклад, length і arguments.

@3 Функція має методи, такі як call() і apply().

@2 Користувацькі конструктори об'єктів

@3 В JS функція може стати конструктором об'єктів.
{{
function Data (y, m, d) 
{ 
    this.year = y;
    this.month = m;
    this.day = d;
}
}}
Для того її слід викликати із словом new.
{{
let d1 = new Data(2021, "жовтень", 19);
let d2 = new Data(2021, "жовтень", 14);
}}

@3 Якщо функція викликається як конструктор об'єкта,
контекст this вказує на об'єкт, що конструюється.

@3 Імена функцій-конструкторів, зазвичай пишуть з великої літери.

@2 Підсумки

@3 Цикл for-in проходить по властивостям об'єкта.
@3 Об'єкти, як і масиви, відносяться до посилальних типів даних.
@3 Масив - це об'єкт з цілочисельними властивостями.
@3 Об'єкти можна створювати за допомогою функцій-конструкторів.

@2 Задачі

@6 Копія Об'єкту | 516
@6 Частотний словник | 567
@6 Англо-Російський Словник | 568

@5 Закон Ципфа | Написати програму, яка отримує текст і будує діаграму частот слів, які до нього входять.
