@1 13 Методи масивів

@2 Методи, що не змінюють масив
@@ indexOf|slice|concat|join

@3 Метод {{indexOf (елемент)}}
повертає індекс першого входження елемента в масив.
{{
let nums = [2,4,3,5,6,3,4];
let i = nums.indexOf(3);
}}
 
@3 Метод {{slice (початок, кінець)}}
повертає новий масив, який є зрізом вихідного.
{Зріз} - це копія частини масиву від початкового індексу включно і до кінцевого індексу виключно.

Метод slice може приймати від'ємні аргументи,
{-і} - те ж саме, що {length - i}

@3 Метод {{concat (масиви)}}
з'єднує даний масив з іншими масивами.
{{
let nums = [1,2,3];
nums.concat ([4,5], [6,7,8])
}}
 
@3 Метод {{join(роздільник)}} повертає рядок, складений з елементів масиву.
{{
let nums = [100, 200, 300];
let str = nums.join(":");
console.log(str);        // 100:200:300
}}

@2 Методи, які змінюють масив
@@ reverse|splice|sort

@3 Метод {{reverse()}} надає елементам масиву зворотного порядку.

@3 Метод {{splice (індекс, кількість-видалених, новий1, новий2, ...)}}
здатний за один виклик і видалити, і додати елементи в масив.
У методі splice перший аргумент може бути від'ємним.

@3 Метод {{sort()}}
Необов'язковим аргументом методу є функція порівняння.
{{
function compare(a, b) { return a - b; }

nums = [2,3,1];
nums.sort (compare);
}}

@2 Багатовимірні масиви
@@ багатовимірн+|двовимірн+|fill

@3 Одразу скажемо, що в JS таких не існує.

@3 Що ж до представлення в програмі математичних матриць або інших таблиць, 
то тут використовують звичайні масиви, елементами яких послуговують масиви.

@3 Наприклад, потрібно програмно представити поле для гри в хрестики-нулики розміром 3х3,
яку спочатку заповнене пустими рядками.
{{
let field = [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']];
}}

@3 Нехай перший гравець ставить хрестик у центрі поля.
{{
field[1][1] = 'x';
}}
Вираз field[1] означає середній елемент масиву field, тобто масив.
Відповідно, field[1][1] буде середнім елементом масиву fieldх1ї.

@3 Трохи складнішим буде створення великого масиву, або такого, 
чий розмір визначиться тільки під час виконання програми.
{{
let m = 4, n = 5;

let a = new Array(m);
for (let i = 0; i < m; i++) {
   a[i] = new Array(n).fill(' ');
}
}}
@3 Метод fill наповнює увесь масив одним значенням.

@3 Якщо піддатися спокусі і скоротити визначення,
{{
let a = new Array(m).fill(new Array(n).fill(' ')) ;
}}
результат буде неочікуваним.
[[https://pythontutor.com/visualize.html#mode=edit]]


@2 Підсумки

@3 Методи масиву становлять набір інструментів для роботи з ним.
@3 Методи поділяються на такі, що змінюють свого володаря, і такі, що не змінюють його.
@3 Дво- і більше вимірні масиви в JS є просто масивами масивів.

@2 Задачі

@6 Дворівневий Масив | 535
@6 Віднімання Масиву | 537
@6 Кількість Щасливих Квитків | 971

@5 Хрестики-Нулики | Створити поле для гри в хрестики-нулики 3x3. Для UI скористайтеся тегами <table> і <img>, для моделі - двовимірним масивом

@@ @3 Питання

@@ почему срез не включает последний индекс? это же неудобно
@@ що повертає метод sort(), новий масив?
@@ Зачем нужны методы, если уже существуют функции?
@@ Для заполнения массива можно использовать метод  push?
@@ как результат присваивания  let x = 100 консоль показывает undefined. как это возможно?
