@1 26 Задача про ханойські вежі

@2 Задача про ханойські вежі
@@ ханойськ+ веж+

@3 Всі задачі, розглянуті раніше, легко вирішуються і без рекурсії - за допомогою циклів.
Наступний приклад не такий.

@3 {Задача}. Є три стрижня. На перший стрижень нанизані n дисків у вигляді пірамідки.
Треба перекласти по одному всі диски на третій стрижень, використовуючи другий стрижень як проміжний.
При цьому більший диск ніколи не повинен опинитися над меншим.
[[Hanoj.png]]

@3 Перекладання одного диску зі стержня x на стрижень y супроводжується друком рядка {{x -> y}}.
Приклад виведення для n = 2:
{{
1 -> 2
1 -> 3
2 -> 3
}}

@3 Загальне рішення
Вихідний стрижень позначимо буквою x, кінцевий - буквою z, проміжний - буквою y.
1. Перекласти пірамідку з (n-1)-го диска зі стрижня x на стрижень y.
2. Перекласти один диск стрижня x на z.
3. Перекласти пірамідку з (n-1)-го диска з проміжного стрижня y на z.

@3 Код:
{{
function hanoy (n, x, z) {
    if (n) {
        let y = 6 - x - z;     
        hanoy (n - 1, x, y);
        console.log (x + '->' + z);
        hanoy (n - 1, y, z);
    }
}
}}

@2 Рекурсія проти ітерації
@@ ітераці+

@3 Рекурсія (так само, як цикл) є способом домогтися повторення команд у програмі.
Будь-яке завдання можна вирішувати як за допомогою рекурсії, так і без неї.

@3 {Приклад}. Перемножити елементи числового масиву.
{{
function prod (a) {
   if (a.length == 0)
      return 1;
   return a [0] * prod (a.slice (1))
}
}}


@2 Підсумки

@3 Рекурсія - це спосіб повторення команд. У цьому сенсі рекурсія становить альтернативу циклу.

@3 Програмуючи рекурсивний алгоритм, треба завжди пам'ятати про базу рекурсії.

@3 Іноді рекурсивний алгоритм виглядає набагато простіше ніж нерекурсивний.

@2 Задачі

@6 Цифри Цілого Числа | 528
@6 Максимум в Масиві | 529
@6 Послідовний Пошук в Масиві | 531
@6 Сума числових Масиву | 533

@5 Ханойські вежі | Написати програму, яка додає відеоряд до відповідної задачі

@@ Питання
@@ А як рекурсивно знайти максимальне число в масиві?
@@ Що таке ітерація?