@1 03 Команда присвоювання

@2 Імена
@@ ім'я|імен+

@3 Мови програмування не оперують адресами пам'яті, замість адрес використовують імена.
Якщо в пам'яті хочуть зберегти число 5, пишуть
{{
x = 5
}}
Це означає: "В комірку пам'яті, позначену ім'ям х, покласти число 5".

@3 Ім`ям може бути будь-яка послідовність літер і цифр, але починатися вона повинна з букви.
Символи підкреслення і долара в іменах вважаються буквами.


@2 Команда присвоювання
@@ присвоюванн+|let|ініціалізац+

@3 Команда, яка змінює стан пам'яті, зветься {присвоювання}.

@4 ім'я = вираз

@3 Число або ім'я - окремі випадки виразу.

@3 Треба розрізняти команди 
{{ 
let x = 5   // ініціалізація

x = 5       // присвоювання
}}
Ініціалізація = виділення комірки + присвоювання.


@3 Оскільки вміст комірки x можна змінювати, x називають змінною,
а вміст комірки називають значенням змінної x.

@3  Команда присвоювання не має нічого спільного з математичним рівнянням.
{{
x = x + 1;
}}
[[https://pythontutor.com/]]

@3 {Приклад}. Обмін значень змінних. Є дві змінні, скажімо a = 25 і b = 36.
Необхідно обміняти їх значення, тобто зробити так, щоб в комірці a з'явилося 36, а в комірці b - 25.


@2 Оголошення імен
@@ оголошенн+|оголоc+|оголош+|undefined


@3 В мовах програмування ім'я нічого не означає, поки воно не оголошено.
{{
alert(n) // помилка
}}

@3 Команда ініціалізації let оголошує ім'я.
{{
let n
}}
Тільки після того, як ім'я оголошено, його можна використовувати.

@3 Якщо ім'я оголошено без присвоювання, його значення дорівнює undefined.

@2 Підсумки

@3 Ім'я в мовах програмування - це послідовність букв або цифр, що починається з букви.

@3 Присвоювання пов'язує ім'я зі значенням.

@3 Перш, ніж скористатися ім'ям, його треба оголосити.

@2 Задачі

@6 Скільки секунд | 476
@6 Два Молодших Розряди | 477
@6 Передостанній Розряд | 478
@6 Сума Трьох Цифр | 479

