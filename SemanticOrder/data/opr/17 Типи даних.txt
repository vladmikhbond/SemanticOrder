@1 17 Типи даних
@@ тип+|number|string|boolean

@3 Тип даних - це сукупність припустимих значень та набір операцій, 
які можна виконувати над цими значеннями.

@3 Прості типи даних:
- числа (number),
- рядки (string),
- логічні значення (boolean),
- undefined.

@3 Визначити тип будь-якого значення можна за допомогою операції typeof,
результат якої - ім'я типу у вигляді рядка.
{{
typeof "abc" // "string"
typeof 123   // "number"
}}

@2 Перетворення типів
@@ перетворенн+ тип+

@3 Порівняння і арифметичні операції виконуються над однотипними операндами.
Якщо операнди різнотипні, відбувається перетворення типу.

@3 Перетворення може бути зроблено інтерпретатором без участі програміста (неявно).
{{
"100" + 200
}}

@3 Перетворити тип можна явно за допомогою функцій Number, String, Boolean.
{{
Number("100")
Boolean(100)
}}

@2 Правила неявного перетворення
@@ -

@3 {Перетворення в рядок}
1. Відбувається, коли операція (+) з'єднує рядок з іншим типом даних.

@3 2. Виконується функціями alert і console.log.

@3 {Перетворення в число}
1. Відбувається в арифметичних виразах і функціях.
{{
"20" - 5
Math.abs("- 42")
}}

@3 2. Відбувається при порівнянні.
{{
"20" > 3      // true 
"20" > "3"    // false
}}

@3 {Перетворення в логічне значення}
Відбувається, коли рядки або числа зустрічаються в складі логічних виразів.
1. Числа 0 і NaN перетворюються в false, інші числа - в true.
2. Порожній рядок - це false, всі інші рядки - true.
3. Значення undefined - це false.

@3 Приклади:
{{
!! ""
!! "0"
!! 0
!! -1
}}

@3 Що надрукує?
{{
false == !! "0"
false == "0"
}}

@3 Неочевидних неявних перетворень, на кшталт "20" > 3, слід уникати.


@2 Суворі порівняння
@@ ===|!==

@3 Суворі порівняння {===} і {! ==} вважають різнотипні значення різними.
{{
false == "0"  // true
false === "0" // false
}}

@3 Звичайні порівняння можуть давати несподіваний результат.
{{
let a = [1];
let b = "1";
let c = [1];

a == b;  // true
b == c;  // true
a == c;  // false
}}

@2 Підсумки

@3 Будь-яке значення має тип.

@3 Значення одного типу може бути перетворено в значення іншого типу явно або неявно.

@3 Явні перетворення ясніше висловлюють наміри програміста.

@3 У виразах слід вживати тільки суворі порівняння.
[[https://stackoverflow.com/questions/7615214/in-javascript-why-is-0-equal-to-false-but-when-tested-by-if-it-is-not-fals]]



@@ Вопросы

@@ Поясните пример в "Що надрукує?"
@@ Вы назвали typeof функциией, а это же операция.
@@ Чому NaN не дорівнює  NaN при суворому порівнянні?
