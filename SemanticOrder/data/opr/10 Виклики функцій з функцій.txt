@1 10 Виклики функцій з функцій
@@ -

@3 Одні функції можна використовувати при визначенні інших функцій.
Наприклад, якщо визначена функція max(a, b), то функцію max3 (a, b, c) можна визначити так:
{{
function max3(a, b, c)
{
   let m = max(a, b);
   return max(m, c);
}
}}

@3 Функція може викликати будь-яку функцію, навіть саму себе.
Іноді це суттєво спрощує алгоритм.

@3 Приклад. Алгоритм Евкліда у вигляді, наближеному до оригіналу.
{{
function gcd(a, b) {
   if (b == 0)
      return a;
   return gcd(b, a % b);
}
}}

@2 Задача про кроликів
@@ Фібоначчі|ряд+ Фібоначчі

@3 [[fibonacci.png]]
Леонардо Пізанський (Фібоначчі)

@3 В загорожу помістили пару новонароджених кроликів.
Кролики готові до розмноження через місяць, і кожен місяць народжують ще пару кроликів.
Скільки пар кроликів сидітимуть в загорожі через n місяців?

@3 
{{
місяць діти дорослі всього
1-й      1      0      1
2-й      0      1      1
3-й      1      1      2
4-й      1      2      3
5-й
6-й
...
}}

@3 Ряд Фібоначчі: 1, 1, 2, 3, 5, 8, 13, ...
Визначити функцію fib(n), яка повертає n-й член ряду Фібоначчі.
@@ {{
@@ function fib(n) {
@@ if (n <= 2)
@@     return 1;
@@ return fib(n - 1) + fib(n - 2);
@@ }
@@ }}

@2 Підсумки

@3 Параметри це місця, які посядуть значення аргументів в тілі функції.

@3 Передача аргументів і повернення результату функції відбуваються за правилами присвоювання.

@3 Функції, які викликають самих себе, називаються рекурсивними.

@2 Задачі

@6 Середнє з П'яти Чисел | 501
@6 Задача про Кроликів | 492

@6 Сума П'яти Чисел | 502
@6 Непарні Складові Фібоначчі | 582
@6 Біноміальний Коефіцієнт | 546
@6 Знакозмінна Сума | 547

@5 Кролики | Написати програму з UI, 
яка при натисканні кнопки відображує в своєму вікні дорослих і малих кроликів на поточний місяць.
При першому натисканні - пара малих, при другому пара дорослих, при третьому пара дорослих и пара малих і так далі. 