@1 08 Інкапсуляція

@2 Інкапсуляція
@@ інкапсуляці|рів+ доступу

@3 Інкапсуляція це здатність класу поєднувати у собі дані та функції, які працюють з даними.

@3 Інкапсуляція також передбачає, що клас не відкриває нічого, крім того, що потрібно клієнту класу.

@2 Рівні доступу
@@ internal

@3 Рівні доступу до членів типу:
- public - необмежений доступ,
- internal - тільки всередині програми.
- private - лише всередині визначення типу,

@3 Рівні доступу до типів:
- public,
- internal.

@3 За замовчуванням компілятор завжди надає мінімальний рівень.

@2 Приховування даних
@@ приховування даних;data hiding

@3 Приклад. Клас з конструктором та двома відкритими полями.
{{
class Rectangle
{
    public int Width;
    public int Height;

    public Rectangle(int w, int h)
    {
        Width = w;
        Height = h;
    }
}
}}

@3 Проблеми:
1) не можна гарантувати цілісність об'єкта протягом його життєвого циклу;
2) об'єкт не є потокобезпечним.

@3 Рішення: закрити поля, але відкрити спеціальні методи – для читання та для запису полів.
{{
class Rectangle
{
    private int width;
    private int height;

    public Rectangle(int w, int h) {
        width = w;
        height = h;
    }

    public int GetHeight() {
        return height;
    }

    public void SetHeight(int value) {
        height = value;
    }
}
}}

@3 Приховування даних - один із принципів ООП.