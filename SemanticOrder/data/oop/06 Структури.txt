@1 06 Структури

@2 Структури
@@ структур+|struct|public

@3 Структура - користувацький тип, який поєднує в собі різнотипні дані.

@3 Структура - значущий тип.
Екземпляр структури займає стільки місця у пам'яті, скільки потрібно для зберігання полів структури.

@3 Приклад оголошення структури.
{{
struct Point
{
    public int X;
    public int Y;
}
}}

@3 Слово public означає доступність полів структури з клієнтського коду.

@3 Присвоювання структури полягає в копіюванні її полів.
{{
Point p1 = new Point(2,3);
Point p2 = p1;
}}
[[structAssigning.png]]

@2 Конструктори та селектори структури

@3 Структура обов'язково має конструктор без параметрів (конструктор за замовченням).
Він заповнює всі поля структури значеннями за замовчуванням (default).
{{
Point p = new Point();
Point p; // Той самий результат
}}

@3 Крім обов'язкового конструктору можна оголосити додаткові конструктори.
{{
struct Point
{
    public int X;
    public int Y;

    public Point(int x, int y) {
         X = x;
         Y = y;
    }
}
}}

@3 Селекторами структури є імена полів:
{{
Point p;
p.X = 10;
p.Y = 20;
}}

@2 Методи структури
@@ this

@3 Структура може володіти не лише полями, а і методами.
Прихований параметр this посилається на екземпляр, на якому викликається метод.
{{
struct Point
{
    public int X;
    public int Y;

    public double Length() {
         return Math.Sqrt(this.X * this.X + this.Y * this.Y);
    }
}
}}

@2 Конструктор копіювання
@@ конструктор+ копіювання|поверхнев+ копіюванн+;shellow copy|глибок+ копіюванн+;deep copy

@3 Присвоювання виконує поверхневе копіювання структури (shellow copy).
{{
Point p2 = p1;
}}

@3 Якщо потрібно глибоке копіювання (deep copy), його потрібно робити вручну.
Зазвичай його реалізують у формі конструктора копіювання.

@3 Конструктор копіювання має один параметр - структуру того самого типу.
{{
struct FullName
{
    public string[] Names;

    public FullName(string[] names)
    {
        this.Names = names;
    }

    public FullName(FullName other) {
        var len = other.Names.Length;
        this.Names = new string[len];
        Array.Copy(other.Names, this.Names, len);
    }
}

string[] names = {"John", "Smith"};
FullName fn1 = новий FullName(names);
FullName fn2 = новий FullName(fn1);
}}


@2 Завдання

@6 Конструктор Копіювання для Вектора | 803
@6 Пошук Структури | 156
@6 Сортування Структур | 157
@6 Часткове Сортування | 187
@6 Пошук у Упорядкованому Масиві | 158
@6 Злиття Упорядкованих Масивів | 159