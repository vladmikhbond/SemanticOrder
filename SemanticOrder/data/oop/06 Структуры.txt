@1 06 Структуры

@3 Структура - пользовательский тип, который объединяет в себе разнотипные данные. 

@3 Структура - значимый тип с изменяемыми значениями.
Экземпляр структуры занимает столько места в памяти, сколько нужно для хранения  полей структуры. 

@3 Пример объявления структуры. 
{{
struct Point
{
    public int X;
    public int Y;
}  
}}

@2 Конструкторы и селекторы

@3 У структуры обязательно есть конструктор без параметров, который заполняет все поля структуры значениями по умолчанию (default). 
{{
Point p = new Point();
Point p;    // тот же результат 
}}

@3 В дополнение к обязательному конструктору можно объявить другие конструкторы. 
{{
struct Point
{
    public int X;
    public int Y;

    public Point(int x, int y) {
         X = x;
         Y = y;
    } 
}  
}}

@3 Селекторами служат имена полей:  
{{
Point p;
p.X = 10;  
p.Y = 20;   
}}

@2 Присваивание структур 

@3 Присваивание структуры - это всегда копирование ее полей.
{{
Point p1 = new Point(2,3);
Point p2 = p1; 
}}
[[structAssigning.png]]

@2 Методы структуры

@3 У структур могут быть не только поля, но и методы.
Через скрытый параметр {this} в теле метода доступен экземпляр, на котором вызывается метод. 
{{
struct Point
{
    public int X;
    public int Y;

    public double Length() {
         return Math.Sqrt(this.X * this.X + this.Y * this.Y);
    } 
}
}}

@2 Конструктор копирования

@3 Присваивание 
{{ 
Point p2 = p1; 
}}
выполняет поверхностное копирование структуры (shellow copy). 

@3 Если необходимо глубокое копирование (deep copy), его нужно делать вручную.
Обычно его реализуют в форме конструктора копирования. 

@3 Конструктор копирования имеет один параметр - структуру того же типа.  
{{
struct FullName
{
    public string[] Names;

    public FullName(string[] names)
    {
        this.Names = names;
    }

    public FullName(FullName other) {
        this.Names = new string[other.Names.Length];
        Array.Copy(other.Names, this.Names, other.Names.Length);
    }
}  

string[] names = {"John", "Smith"};
FullName fn1 = new FullName(names);
FullName fn2 = new FullName(fn1);            
}}


@2 Задачи

@6 Конструктор Копирования для Вектора | 803
@6 Поиск Структуры  | 156
@6 Сортировка Структур  | 157
@6 Частичная Сортировка	| 187
@6 Поиск в Упорядоченном Массиве | 158
@6 Слияние Упорядоченных Массивов | 159



