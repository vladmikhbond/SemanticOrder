@1 19 Параметры методов

@3 В классах TextReader и TextWriter встретились параметры, помеченные как ref и params.

@2 Спецификатор ref

@3 Аргументы {всегда} передаются параметрам при помощи копирования, но
для ссылочных типов копируется ссылка,
для значимых типов копируется значение.

@3 Спецификатор ref означает, что аргумент будет заключен внутрь безымянного объекта и 
при передаче будет скопирован не сам аргумент, а ссылка на этот объект.

@3 Значимый тип с ref как бы становится ссылочным.
Метод Swap будет работать, если пометить его параметры как ссылочные.
{{
static void Swap(int a, int b)
{
    var t = a; a = b; b = t;
}
}}

@3 Для ссылочных типов спецификатор ref также имеет смысл.
С его помощью внутри метода можно изменить не только значение массива, но и ссылку на него.
{{
static void Split(string s, ref string[] arr)
{
    arr = s.Split(' ');            
}
}}

@3 Впрочем, в последнем примере естественней применить не ref, а out.
Спецификатор out означает то же, что ref, но не требует предварительной инициализации аргумента.
 

@2 Методы с переменным числом параметров

@3 Если параметр-массив пометить как params, 
то передавать значение такому параметру можно и в виде массива, и в виде отдельных элементов. 

@3 Один из методов Console.WriteLine имеет переменное число аргументов.
{{
Console.WriteLine("{0} {1} {2} ", 10, 20, 30);
}} 

