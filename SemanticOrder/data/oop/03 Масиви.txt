@1 03 Масиви

@2 Масиви
@@ масив+|new|конструктор+|селектор+

@3 Масив – пронумерована послідовність {однотипних} значень.
В C# розмір масиву фіксований і задається при створенні масиву.

@3 Масив - це посилальний тип даних.
[[arrays.png]]

@3 Конструктором масиву служить вираз
{{
new тип[розмір]
}}

@3 В C# виклику конструктора завжди передує оператор new.
{{
float[] f = new float[25];
short[] s = новий short[n + m];
}}

@3 Селектором масиву є вираз.
{{
ім'я_масиву[цілочісельний_вираз]
}}

@2 Властивості та методи масиву
@@ Array|Length|BinarySearch|IndexOf|LastIndexOf|Reverse|Sort

@3 Масив має властивість {Length}, що зберігає довжину масиву.

@3 Приклад. Вивести на екран вміст масиву m.
{{
int[] m = new int[3];
m[0] = 1; m[1] = 2; m[2] = 3;

int i = 0;
while(i < m.Length)
{
    Console.Write(m[i]);
    i += 1;
}
}}

@3 Інше рішення:
{{
int[] m = {1,2,3}; // Вираз ініціалізації

foreach (int x in m)
     Console.Write(x);
}}


@3 Будь-який масив є екземпляром класу System.Array.
Статичні методи класу Array:
{{
BinarySearch
Clear
IndexOf
LastIndexOf
Reverse
Sort
}}

@6 Заповнення Масиву | 134

@2 Вreak, continue і goto
@@ break|continue|goto

@3 Такі команди в C# є.
[[breakCommand.png]]

@6 Лівий циклічний зсув | 140

@2 Багатомірні масиви
@@ двомірн+ масив+

@3 {{
int[,] m = new int[10, 20];
m[1, 2] = 100;
}}

@3 Приклад. Друк двомірного масиву.
{{
for (int row = 0; row < m.GetLength(0); row++)
   for (int col = 0; col < m.GetLength(1); col++)
      Console.Write (m [row, col]);
   Console.WriteLine();
}}

@3 Статичні методи класу Array для багатомірних масивів не дуже корисні,
бо трактують багатомірні масиви як одномірні, скажімо, властивість Length зберігає кількість всіх елементів.

@2 Невирівняні (jagged) масиви

@3 Це масиви масивів (як у JS).
{{
int[][] m = new int[10][];
m[0] = new int[20];
m[1] = new int[30];
}}

@2 Задачи

@6 Обратный Массив  | 133
@6 Суммирование Массива  | 135
@6 Вставка Нулей  | 136
@6 Правый Циклический Сдвиг  | 137
@6 Слияние Массивов  | 141
@6 Треугольник Паскаля  | 143

