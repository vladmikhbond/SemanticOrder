@1 08 Инкапсуляция

@3 Инкапсуляция это способность класса объединять в себе данные и функции, которые работают с данными.

@3 Инкапсуляция также предполагает, что класс не открывает ничего, сверх того, что необходимо клиенту класса.

@3 Технически сокрытие данных достигается: 
- выбором минимально возможного уровня доступа к членам класса;
- использованием свойств.

@2 Уровни доступа

@3 Уровни доступа к членам типа:
- public - неограниченный доступ,
- internal - только внутри приложения.
- private - только внутри определения типа,

@3 Уровни доступа к типам:
- public,
- internal.

@3 По умолчанию компилятор всегда придает минимальный из возможных уровней.

@2 Сокрытие данных

@3 Пример. Класс с конструктором и двумя открытыми полями. 
{{
class Rectangle
{
    public int Width;
    public int Height;

    public Rectangle(int w, int h)
    {
        Width = w;
        Height = h;
    }
}
}}

@3 Проблемы:
1) нельзя гарантировать целостность объекта на протяжении его жизненного цикла;
2) объект не потокобезопасен.

@3 Решение: закрыть поля, но открыть специальные методы - для чтения и для записи полей.  
{{
class Rectangle
{
    private int width;
    private int height;

    public Rectangle(int w, int h) {
        width = w;
        height = h;
    }

    public int GetHeight() {
        return height;
    }

    public void SetHeight(int value) {
        height = value;
    }
}
}}

@3 {Сокрытие данных} (data hiding) - один из основных принципов ООП.

