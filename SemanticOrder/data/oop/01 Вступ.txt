@1 01 Вступ

@2 ООП і класи
@@ клас+;class

@3 Хоча програмування називається об'єктивно-орієнтованим, центральну роль в нім грають класи (class).

@3 Щоб написати велику програму, її необхідно поділити на модулі - програми меншого обсягу.

@3 Класи відіграють роль модулів, вони містять дані та функції, імена яких унікальні в межах класу.
Система класів програм визначає її модульну структуру.

@3 На відміну від модулів класи є типами даних. 
В багатьох мовах слова "клас" і "тип" - синоніми.

@2 Платформа .NET
@@ .NET|бібліотек+ клас+|середовищ+ виконанн+|двоетапн+ компіляц+

@3 Платформа .NET Framework з'явилася в 2001 році як відповідь компанії MS на поширення Java (1995).

@3 Обидві платформи влаштовані подібно:
віртуальна машина (середовище виконання),
велика бібліотека класів,
двоетапна компіляція.
[[dotNetPlatform.png]]

@3 На платформі Java одна мова, на платформі .NET - безліч.

@3 В 2015 з'явилася альтернативна версія платформи, яку назвали .NET Core.
На відміну від .NET Framework вона не прив'язана до ОС Windows і має відритий вихідний код.

@3 Зараз ця версія є основною і зветься просто .NET 
(.NET 6 - стабільна, .NET 7 - preview)

@2 Мова C#

@@ C#|статично типізован+|Андерс+ Хейлсберг+;Anders Heylsberg

@3 C# - статично типізована мова.
Це означає, що тип мають мають не тільки значення, а й імена.

@3 Типізація імен - це часткова специфікація програми,
причому така, що може бути перевірена не людиною, а компілятором.
Порівняймо
{{
---------- JS
let i = 0; 
i = "нуль";
---------- C#
int i = 0; 
i = "нуль"; // помилка
}}

@3 C# - об'єктно-орієнтована мова,
але інші стилі програмування також можливі.

@3 C# розроблявся не співтовариством, а командою.
Головний розробник С# - Андерс Хейлсберг.
[[anders_heylsberg.png]]

@2 CLI
@@ CLI|dotnet

@3 .NET надає розробнику інтерфейс командного рядка.
{{
> md world
> cd world
> dotnet nеw console
> dotnet run
}}

@3 Його забезпечує програма dotnet.exe зі складу SDK.


@2 Visual Studio
@@ VS|проект+project|рішенн+;solution|пакет+;package

@3 Версія студії – 17, рік – 2022.

@3 {Проект} - папка з файлами + файл проекту *.csprj.

@3 {Рішення} (solution) - кілька проектів + файл рішення *.sln.

@3 {Залежності} - сторонні пакети програм або проекти, від яких проект залежить.

@2 Файл Program.cs
@@  прост+ імен;namespace|статичн+;static|точ+ входу|void

@3 {{
namespace ConsoleApp1
{
    internal class Program
    {
       static void Main(string[] args)
       {
          Console.WriteLine("Hello, World!");
       }
    }
}
}}

@3 Простір імен - це область видимості, яка може охоплювати декілька файлів або частин файлів.

@3 Статичний метод - метод, який можна викликати, не створюючи екземплярів класу.

@3 Точка входу в програму - метод програми, який викликається системою, що виконує.

@3 Слово void означає, що функція не повертає ніякого значення,
ії користь полягає в побічному ефекті.



@2 Література

@3 Троелсен Э., Джепикс Ф. Язык программирования C# 7 и платформы. NET и NET Core

@3 В.Бондарев. Объектно-ориентированное программирование на C#.

@3 Методичка по КП
[[https://drive.google.com/file/d/14O-5ih7wZZgj-RQgjvtCIDcefveJKHLn/view?usp=sharing]]

