@1 40 Функціональне програмування

@2 Особливості ФП

@3 Базовим поняттям ФП є функція. 
Дані - то функції без аргументів.
Бінарні операції - то функції двох аргументів.
{{
f x = x + 1
five = 5
a + b = (+) a b
}}

@3 Програма виглядає не як послідовність команд, 
а як вираз, який треба обчислити.
{{
f 10
}}

@3 Вирази будуються за допомогою лише двох операцій - застосування та абстракції.
Все інше - синтаксичний цукор. 
{{
\y -> f y * 10   
}}

@3 Функції можуть бути застосовані частково.
{{
(+) 1
}}

@3 Раз нема команд, то нема і присвоювань.
Але ініціалізація є.

@3 Раз нема присвоювань, то нема циклів.
Повторення досягається за допомогою рекурсії.

@3 Вбудовані типи - зв'язані списки (а не масиви) i кортежі. 

@3 Обчислюються вирази  за допомогою перетворень. Їх всього 3 види і вони дуже прості.
Обчислює інтерпретатор, тому нам не треба перейматися.

@3 Обчислення - ліниві, тобто обчислення виконується лише тоді, 
коли без його результату програма не може просуватися.

@2 Haskell online

@3 [[https://www.tutorialspoint.com/]]
@3 [[https://app.codingrooms.com/]]

@2 Лямбда-вирази

@3 Лямбда-вираз - то результат операції абстракції.
{{
x + 1               -- довільне обчислення
\x -> x + 1         -- лямбда-вираз
f = \x -> x + 1     -- іменований лямбда-вираз
f x = x + 1         -- рівняння 
}}

@2 Визначення функцій

@3 Функції визначають за допомогою рівнянь.
{{
f x = 2 * x^2 + 3 * x
}}

@3 В правій частині рівнянь можуть бути умовні вирази.
{{
abs x = if x < 0 then -x else x
}}

@3 В лівій частині можуть бути охоронні вирази.
{{
abs x | x < 0     = -x
abs x | otherwize = x
-- або --
abs x 
  | x < 0     = -x
  | otherwize = x
}}

@3 Коли функція задається декількома рівняннями, пошук підходящого здійснюється зверху вниз.


@2 Часткове застосування

@3 Часткове застосування функції дає також функцію, але з меншою кількістю параметрів.
{{
f x y = x + y
f 2 3  -- це число 5
f 2    -- це функція, яка додає 2 до свого аргументу
g = f 2
g 3    -- це число 5
}}

@3 Будь-яку функцію, окрім констант, можна розглядати, як функцію єдиного аргументу.
Якщо таку функцію застосувати (по-імперативному - визвати), вона поверне функцію з на 1 меншою кількістю аргументів.


@2 Операції

@3 Бінарна операція - це застосування функції не в префіксній, а в інфіксній формі.
{{
2 `f` 3  -- це число 5
2  +  3
(+) 2 3
}}

@3 Часткове застосування бінарних операцій можливе у вигляді зрізів.
{{
inc = (+1)  --  це функція інкремента
}}

